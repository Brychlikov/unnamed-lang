
# listy i funkcje biblioteczne

let l = [1, 2, 3, 4]

let sum_l = foldr (fun x y -> x + y) 0 l 

let x = println sum_l


let addNums x y = x + y

# automatyczna częściowa aplikacja
let l2 = map (addNums 5) l 

let x2 = printList l2


# Mamy rekursję ogonową! 

let count acc n = 
    if n == 0 then 
        acc 
    else 
        count (acc + 1)  (n- 1)

# I to nawet wzajemną
let rec even n = 
    if n == 0 then true 
    else odd (n-1)

and odd n = 
    if n == 0 then false
    else even (n-1)

let x3 = println (count 0 100000)
let x4 = println (even 100000)
